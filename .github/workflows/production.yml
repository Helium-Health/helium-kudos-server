name: Deploy to Production Environment

on:
  workflow_dispatch:
    
env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Build and push  Docker image
        run: |
          docker build -t 1med/helium-kudos-server-prod .
          docker push 1med/helium-kudos-server-prod


      # - name: Set up ArgoCD CLI
      #   run: |
      #     sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
      #     sudo chmod +x /usr/local/bin/argocd

      # - name: ArgoCD Login
      #   run: |
      #     yes | argocd login ${{ vars.ARGOCD_STAGING_URL }} --insecure --username ${{ secrets.ARGOCD_USERNAME }} --password  ${{ secrets.ARGOCD_PASSWORD }}

      # - name: ArgoCD Sync App
      #   env:
      #     APP_NAME: helium-kudos-server-staging
      #   run: |
      #     argocd app actions run $APP_NAME restart --kind Deployment --resource-name helium-kudos-server-staging --all


      - name: Set up ArgoCD CLI
        run: |
          sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo chmod +x /usr/local/bin/argocd
      - name: ArgoCD Login (Prod)
        run: |
          yes | argocd login ${{ vars.ARGOCD_PROD_URL }} --insecure --username ${{ secrets.ARGOCD_USERNAME }} --password  ${{ secrets.ARGOCD_PASSWORD }}
      - name: ArgoCD Deploy Prod App
        run: |
          argocd app actions run helium-kudos-server-prod restart --kind Deployment
          
